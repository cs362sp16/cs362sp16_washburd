        -:    0:Source:randomtestcard1.c
        -:    0:Graph:randomtestcard1.gcno
        -:    0:Data:randomtestcard1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "interface.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <stdlib.h>
        -:    6:
function main called 1 returned 100% blocks executed 100%
        1:    7:int main(){
        -:    8:	
        -:    9:	struct gameState g;
        -:   10:	
        1:   11:	int k[10] = {smithy,adventurer,gardens,embargo,cutpurse,mine,ambassador,
        -:   12:		outpost,baron,tribute};
        -:   13:	
        -:   14:	int tests, i, handCount, deckCount, player;
        -:   15:	
        1:   16:	tests = 2048;  //Number of loops through
        1:   17:	player = 0;
        -:   18:	
     2049:   19:	for(i=0; i<tests; i++){
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
     2048:   20:		initializeGame(2, k, 5, &g);
call    0 returned 100%
        -:   21:		
     2048:   22:		g.handCount[player] = rand()%500;
call    0 returned 100%
     2048:   23:		g.deckCount[player] = rand()%500;
call    0 returned 100%
        -:   24:		
     2048:   25:		handCount = g.handCount[player];
     2048:   26:		deckCount = g.deckCount[player];
        -:   27:		
     2048:   28:		addCardToHand(player, 13, &g);
call    0 returned 100%
     2048:   29:		playCard(handCount, 0, 0, 0, &g);
call    0 returned 100%
        -:   30:		
     2048:   31:		if(g.handCount[player] == handCount+3){
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
     2033:   32:			printf("%d\n", i);
call    0 returned 100%
        -:   33:		}
        -:   34:		
     2048:   35:		if(g.deckCount[player] == deckCount-3){
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
     2033:   36:			printf("%d\n", i);
call    0 returned 100%
        -:   37:		}
        -:   38:		
        -:   39:	}
        -:   40:	
        1:   41:	return 0;
        -:   42:	
        -:   43:}
        -:   44:
